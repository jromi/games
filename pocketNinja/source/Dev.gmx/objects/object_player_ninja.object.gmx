<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_move</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_x=x;
target_y=y;
goalX=x;
goalY=y;
isCollision=false;
canMove=true;
isMoving=false;
canDash=true
isDashing=false;
canSneak=false;
isSneaking=false;
click=false;
image_speed=0.25;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canSneak=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isCollision=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-y;
if (isCollision=false) {
    if (collision_ellipse(x-12,y-3,x+12,y+3,solid_parent,false,false)) {
            isCollision=true;
            alarm[0]=2;
            if!((position_empty(x,y-1))||(position_empty(x,y+1))){
                vspeed=0;
                exit;
            }
            else{
                hspeed=0;
                exit;
            }
            //sprite_index=player_collision;
            //image_speed=0.25;
     }
     else{
         if(isMoving==true){ //NORMAL MOVEMENT
            move_towards_point(goalX,goalY,2);  
         }
         else if(isDashing==true){ //DASHING
            move_towards_point(goalX,goalY,4);
         }
         else if(isSneaking==true){ //SNEAKING
            move_towards_point(goalX,goalY,1);
         }
     }
}
if (point_distance(x,y,goalX,goalY)&lt;2) {
     speed=0;
     isMoving=false;
     isDashing=false;
     isSneaking=false;
     sprite_index = player_idle;
     target_pointer.sprite_index = cursor_blank;
     image_speed=0.25;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="89">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="88">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canMove==true){
    if(isSneaking==true){
        sprite_index=player_norm;
        image_speed=0.25;
        click=true;
        alarm[1]=15;
        isSneaking=false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canMove==true){
    if(os_type==os_android){
        target_x=mouse_x;
        target_y=mouse_y;
        
        if !(position_meeting(mouse_x,mouse_y,solid_parent)) { //VALID MOVEMENT TARGET
            goalX=mouse_x;
            goalY=mouse_y;
        }
        if(canDash){
            isDashing=true;
            isMoving=false;
            isSneaking=false;
            sprite_index=player_dash;
            image_speed=0.5;
        }
        click=false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if not collision_line(x,y,mouse_x,mouse_y,solid_parent,false,false){ LINE OF SIGHT TEST
    canMove=true;
}
else {
    canMove=false;
}
*/

if(canMove==true){
    canSneak=false;// SNEAK RESET
    isSneaking=false;
    alarm[2]=7;// SNEAK TIME DELAY
    //sprite_index = player_norm;
    // SPRITE ANGLE
    a = point_direction(x,y,mouse_x,mouse_y)
    if a&lt;90 || a&gt;270 {
            image_xscale=-1;
        }
    else {
        image_xscale=1;
        }
    //SPRITE ANGLE
    if !(position_meeting(mouse_x,mouse_y,solid_parent)) { //VALID MOVEMENT TARGET
        goalX=mouse_x;
        goalY=mouse_y;
        }
    
    if(click==true){  //DOUBLE CLICK SPRINT
        if(canDash){
            isDashing=true;
            isMoving=false;
            isSneaking=false;
            sprite_index=player_dash;
            image_speed=0.5;
        }
        click=false;
    }
    else {  //NORMAL MOVEMENT
        isMoving=true;
        isDashing=false;
        isSneaking=false;
        sprite_index=player_norm;
        image_speed=0.25;
        click=true;
        alarm[1]=15;
    }
}




  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canMove==true){
    target_x=mouse_x;
    target_y=mouse_y;
    if(click==true) {
        if(canSneak){
            if(mouse_check_button(mb_left)){
                isSneaking=true;
                goalX=mouse_x;
                goalY=mouse_y;
                sprite_index=player_sneak;
                image_speed=0.15;
                click=true;
                alarm[1]=15;
                //canSneak=false;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_text_transformed(x-10,y+10,string(depth),0.5,0.5,0);
/*if(global.DEBUG_MODE==true){
        if not collision_line(x,y,mouse_x,mouse_y,solid_parent,false,false){
            draw_set_colour(c_lime);
        }
        else {
            draw_set_colour(c_red);
        }
        draw_line(x,y,mouse_x,mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
